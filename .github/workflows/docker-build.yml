name: PowerBlocks Docker Image Build
run-name: Build Docker images for PowerBlocks
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true

env:
  REGISTRY: ghcr.io

jobs:
  build-images:
    strategy:
      matrix:
        arch: [ { 'tag': 'amd64', 'runner': 'ubuntu-latest' }, { 'tag': 'arm64', 'runner': 'ubuntu-24.04-arm' } ]
        style: [ { 'tag': 'slim', 'llvm_extras': '', 'extra_installs': '' }, { 'tag': 'dev', 'llvm_extras': ';clang-tools-extra;lldb', 'extra_installs': 'install-clangd install-lldb install-lldb-dap' } ]
    runs-on: ${{ matrix.arch.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase repo name for image reference
        id: case
        uses: vishalmamidi/lowercase-action@v1
        with:
          string: ${{ github.repository }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.case.outputs.lowercase }}
      
      - name: Docker build
        id: docker-build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.docker/Dockerfile
          build-args: |
            LLVM_EXTRAS=${{ matrix.style.llvm_extras }}
            EXTRA_INSTALLS=${{ matrix.style.extra_installs }}
          tags: ghcr.io/${{ steps.case.outputs.lowercase }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.docker-build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.style.tag }}-${{ matrix.arch.tag }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
        
  imagetools:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        style: [ 'slim', 'dev' ]
    needs: build-images
    steps:          
      - name: Download AMD64 image
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: ${{ matrix.style }}-*
          merge-multiple: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase repo name for image reference
        id: case
        uses: vishalmamidi/lowercase-action@v1
        with:
          string: ${{ github.repository }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.case.outputs.lowercase }}
          tags: |
            ${{ matrix.style}}-latest
            ${{ matrix.style }}-${{ inputs.version }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ steps.case.outputs.lowercase }}@sha256:%s ' *)